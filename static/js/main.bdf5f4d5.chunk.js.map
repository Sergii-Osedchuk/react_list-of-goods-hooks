{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","console","log","reverse","getReorderedGoods","isResetButtonVisible","className","type","cn","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EArDD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNK,EAAsB,YAAOC,GAEnC,OAAQH,GACN,KAAKP,EAASW,SACZF,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUE,cAAcD,MAG1B,MAEF,KAAKd,EAASgB,OACZP,EAAaG,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAIlC,KAAKjB,EAASM,MAQhB,OAFAY,QAAQC,IAAIZ,EAAUH,GAEfA,EAAaK,EAAaW,UAAYX,EAwBxBY,CACnBpB,EACA,CAAEM,WAAUH,eAGRkB,EAAuBlB,GAAcG,IAAaP,EAASM,KAEjE,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYlB,IAAaP,EAASW,WAEtCe,QAjCe,WACrBlB,EAAYR,EAASW,WA0BjB,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYlB,IAAaP,EAASgB,SAEtCU,QAxCa,WACnBlB,EAAYR,EAASgB,SAiCjB,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QA/CQ,WACdrB,GAAeD,IAwCX,qBAWCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QApDI,WACZlB,EAAYR,EAASM,MACrBD,GAAc,IA+CR,sBAUJ,6BACGI,EAAakB,KACZ,SAAAC,GAAI,OACF,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCxIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bdf5f4d5.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods: string[] = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.localeCompare(secondGood)\n      ));\n\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.length - secondGood.length));\n\n      break;\n\n    case SortType.NONE:\n    default: break;\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const isResetButtonVisible = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(\n          item => (\n            <li data-cy=\"Good\" key={item}>\n              {item}\n            </li>\n          ),\n        )}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}